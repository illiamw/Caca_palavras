{"ast":null,"code":"import React from 'react';\nimport Data from '../conteudo/palavras08102019';\nexport default class Construtor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tentativas = this.vetorPosibilidades(props.colunas * props.linhas);\n  }\n\n  criandoLevel(col, lin) {\n    this.state.colunas = col;\n    this.state.linhas = lin;\n  }\n\n  testePosicao(col, lin, palavra, index) {\n    for (let index = 0; index < this.tentativas.length; index++) {}\n  }\n\n  geradorGabarito(col, lin) {\n    var gabarito = Array(col * lin).fill(0);\n    var palavra;\n\n    for (let index = 0; index < 6; index++) {\n      do {\n        palavra = this.selecionarPalavras();\n      } while (this.testePosicao(col, lin, palavra, index));\n    }\n  }\n\n  vetorPosibilidades(value) {\n    var posicoes = Array(value);\n\n    for (let i = 0; i < value; i++) posicoes[i] = i;\n\n    let aux = 0,\n        ind1,\n        ind2;\n\n    for (let i = 0; i < value; i++) {\n      ind1 = Math.floor(Math.random() * value);\n      ind2 = Math.floor(Math.random() * value);\n      aux = posicoes[ind1];\n      posicoes[ind1] = posicoes[ind2];\n      posicoes[ind2] = aux;\n    }\n\n    console.log(posicoes);\n    return posicoes;\n  }\n\n  selecionarPalavras() {\n    console.log(this.props.colunas);\n    var palavra;\n    MAX = this.props.colunas;\n    var len = this.props.colunas + 1;\n    var index = 0;\n\n    while (len > MAX) {\n      palavra = Data[Math.floor(Math.random() * Data.length)][\"Resposta\"];\n      len = palavra[index].length;\n      index++;\n    }\n\n    console.log(palavra);\n    return palavra;\n  }\n  /**\r\n   * @description geração Aleatória de letras \r\n   * @returns {Char} \"c\"\r\n   */\n\n\n  geradorChar(value) {\n    console.log(\"olha só\");\n    var alfabeto = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    var conteudo = Array(value);\n\n    for (let index = 0; index < value; index++) {\n      conteudo[index] = alfabeto[Math.floor(Math.random() * alfabeto.length)];\n    }\n\n    return conteudo;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/EIC/Documents/Caca_palavras/src/Componentes/Construtor.js"],"names":["React","Data","Construtor","Component","constructor","props","tentativas","vetorPosibilidades","colunas","linhas","criandoLevel","col","lin","state","testePosicao","palavra","index","length","geradorGabarito","gabarito","Array","fill","selecionarPalavras","value","posicoes","i","aux","ind1","ind2","Math","floor","random","console","log","MAX","len","geradorChar","alfabeto","conteudo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Data from '../conteudo/palavras08102019';\r\nexport default class Construtor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tentativas = this.vetorPosibilidades(props.colunas * props.linhas)\r\n    }\r\n    criandoLevel(col, lin) {\r\n        this.state.colunas = col;\r\n        this.state.linhas = lin;\r\n    }\r\n\r\n    testePosicao(col, lin, palavra, index) {\r\n        for (let index = 0; index < this.tentativas.length; index++) {\r\n                        \r\n        }\r\n    }\r\n\r\n    geradorGabarito(col, lin) {\r\n        var gabarito = Array(col * lin).fill(0);\r\n        var palavra;\r\n\r\n        for (let index = 0; index < 6; index++) {\r\n            do {\r\n                palavra = this.selecionarPalavras();\r\n            } while (this.testePosicao(col, lin, palavra, index));\r\n        }\r\n    }\r\n\r\n    vetorPosibilidades(value) {\r\n        var posicoes = Array(value);\r\n        for (let i = 0; i < value; i++) posicoes[i] = i;\r\n        let aux = 0, ind1, ind2;\r\n        for (let i = 0; i < value; i++) {\r\n            ind1 = Math.floor(Math.random() * value);\r\n            ind2 = Math.floor(Math.random() * value);\r\n            aux = posicoes[ind1];\r\n            posicoes[ind1] = posicoes[ind2];\r\n            posicoes[ind2] = aux;\r\n        }\r\n        console.log(posicoes);\r\n        return posicoes\r\n    }\r\n\r\n\r\n    selecionarPalavras() {\r\n        console.log(this.props.colunas);\r\n        var palavra;\r\n        MAX = this.props.colunas;\r\n        var len = this.props.colunas + 1;\r\n        var index=0;\r\n        while (len > MAX) {\r\n            palavra = Data[Math.floor(Math.random() * Data.length)][\"Resposta\"];\r\n            len = palavra[index].length;\r\n            index++;\r\n        }\r\n\r\n        console.log(palavra);\r\n        return palavra;\r\n    }\r\n\r\n    /**\r\n     * @description geração Aleatória de letras \r\n     * @returns {Char} \"c\"\r\n     */\r\n    geradorChar(value) {\r\n        console.log(\"olha só\");\r\n        var alfabeto = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\r\n        var conteudo = Array(value)\r\n        for (let index = 0; index < value; index++) {\r\n            conteudo[index] = alfabeto[Math.floor(Math.random() * alfabeto.length)];\r\n        }\r\n        return conteudo;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}